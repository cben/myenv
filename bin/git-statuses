#!/bin/bash
if [[ $# == 0 ]]; then
    echo "Usage: [env BASELINE_BRANCH=...] $(basename "$0") <work directory>..."
    exit 1
fi

export BASELINE_BRANCH="${BASELINE_BRANCH:-origin/master}"

gparallel --keep-order '
  cd {}
  # The intent is for user to pass working tree paths.
  # If say inside a git checkout I have several other repos checked out under plugins/
  # and I do `git statuses plugins/`  by mistake instead of `git statuses plugins/*`,
  # it would silently work up from plugins to . and give me status for that :-(
  # The `show-cdup` is normally empty but in this case would show me `plugins/../`.
  echo "$(tput smul){}/$(git rev-parse --show-cdup)$(tput rmul)"  # underlined
  # TODO pushed branch "$(git config github.user)/$(git rev-parse --abbrev-ref HEAD)"
  git log --oneline --decorate --graph HEAD "$BASELINE_BRANCH" --not "$BASELINE_BRANCH" --color
  printf "\t$(git rev-list --left-right --count HEAD...$BASELINE_BRANCH | egrep --color=always "[0-9]*[1-9][0-9]*|\$") commits ahead/behind."
  printf "\tFetched: %s" "$(stat --format="%y" $(git rev-parse --git-dir)/FETCH_HEAD)."
  printf "\tLast commit: %s" "$(git log -n1 --format="%cr" | egrep --color=always "[0-9]* *(week|month|year)s?|\$")."
  echo

  # compact git status (no "use ..." tips, no empty lines), indented
  git -c color.status=always status --branch --untracked-files=no |
    sed -e "s/(use .*)//" -e "/^ *\$/d" -e "s/^/    /"
' ::: "$@"
